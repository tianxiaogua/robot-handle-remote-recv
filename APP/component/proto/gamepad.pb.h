/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.0 */

#ifndef PB_GAMEPAD_GAMEPAD_PB_H_INCLUDED
#define PB_GAMEPAD_GAMEPAD_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _GAMEPAD_KEY_MODE {
    GAMEPAD_KEY_MODE_BUTTON_UP = 0,
    GAMEPAD_KEY_MODE_BUTTON_DOWN = 1
} GAMEPAD_KEY_MODE;

/* Struct definitions */
typedef struct _GAMEPAD_KEY_VALUE {
    GAMEPAD_KEY_MODE KEY_CHA;
    GAMEPAD_KEY_MODE KEY_LEFT;
    GAMEPAD_KEY_MODE KEY_RIGHT;
    GAMEPAD_KEY_MODE KEY_UP_;
    GAMEPAD_KEY_MODE KEY_DOWN_;
    GAMEPAD_KEY_MODE KEY_A;
    GAMEPAD_KEY_MODE KEY_B;
    GAMEPAD_KEY_MODE KEY_X;
    GAMEPAD_KEY_MODE KEY_Y;
    GAMEPAD_KEY_MODE KEY_LB;
    GAMEPAD_KEY_MODE KEY_RB;
    GAMEPAD_KEY_MODE KEY_SELECT;
    GAMEPAD_KEY_MODE KEY_START;
    GAMEPAD_KEY_MODE KEY_R_KEY;
    GAMEPAD_KEY_MODE KEY_L_KEY;
    int64_t LX;
    int64_t LY;
    int64_t RX;
    int64_t RY;
    int64_t LT;
    int64_t RT;
} GAMEPAD_KEY_VALUE;


/* Helper constants for enums */
#define _GAMEPAD_KEY_MODE_MIN GAMEPAD_KEY_MODE_BUTTON_UP
#define _GAMEPAD_KEY_MODE_MAX GAMEPAD_KEY_MODE_BUTTON_DOWN
#define _GAMEPAD_KEY_MODE_ARRAYSIZE ((GAMEPAD_KEY_MODE)(GAMEPAD_KEY_MODE_BUTTON_DOWN+1))


/* Initializer values for message structs */
#define GAMEPAD_KEY_VALUE_init_default           {_GAMEPAD_KEY_MODE_MIN, _GAMEPAD_KEY_MODE_MIN, _GAMEPAD_KEY_MODE_MIN, _GAMEPAD_KEY_MODE_MIN, _GAMEPAD_KEY_MODE_MIN, _GAMEPAD_KEY_MODE_MIN, _GAMEPAD_KEY_MODE_MIN, _GAMEPAD_KEY_MODE_MIN, _GAMEPAD_KEY_MODE_MIN, _GAMEPAD_KEY_MODE_MIN, _GAMEPAD_KEY_MODE_MIN, _GAMEPAD_KEY_MODE_MIN, _GAMEPAD_KEY_MODE_MIN, _GAMEPAD_KEY_MODE_MIN, _GAMEPAD_KEY_MODE_MIN, 0, 0, 0, 0, 0, 0}
#define GAMEPAD_KEY_VALUE_init_zero              {_GAMEPAD_KEY_MODE_MIN, _GAMEPAD_KEY_MODE_MIN, _GAMEPAD_KEY_MODE_MIN, _GAMEPAD_KEY_MODE_MIN, _GAMEPAD_KEY_MODE_MIN, _GAMEPAD_KEY_MODE_MIN, _GAMEPAD_KEY_MODE_MIN, _GAMEPAD_KEY_MODE_MIN, _GAMEPAD_KEY_MODE_MIN, _GAMEPAD_KEY_MODE_MIN, _GAMEPAD_KEY_MODE_MIN, _GAMEPAD_KEY_MODE_MIN, _GAMEPAD_KEY_MODE_MIN, _GAMEPAD_KEY_MODE_MIN, _GAMEPAD_KEY_MODE_MIN, 0, 0, 0, 0, 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define GAMEPAD_KEY_VALUE_KEY_CHA_tag            1
#define GAMEPAD_KEY_VALUE_KEY_LEFT_tag           2
#define GAMEPAD_KEY_VALUE_KEY_RIGHT_tag          3
#define GAMEPAD_KEY_VALUE_KEY_UP__tag            4
#define GAMEPAD_KEY_VALUE_KEY_DOWN__tag          5
#define GAMEPAD_KEY_VALUE_KEY_A_tag              6
#define GAMEPAD_KEY_VALUE_KEY_B_tag              7
#define GAMEPAD_KEY_VALUE_KEY_X_tag              8
#define GAMEPAD_KEY_VALUE_KEY_Y_tag              9
#define GAMEPAD_KEY_VALUE_KEY_LB_tag             10
#define GAMEPAD_KEY_VALUE_KEY_RB_tag             11
#define GAMEPAD_KEY_VALUE_KEY_SELECT_tag         12
#define GAMEPAD_KEY_VALUE_KEY_START_tag          13
#define GAMEPAD_KEY_VALUE_KEY_R_KEY_tag          14
#define GAMEPAD_KEY_VALUE_KEY_L_KEY_tag          15
#define GAMEPAD_KEY_VALUE_LX_tag                 16
#define GAMEPAD_KEY_VALUE_LY_tag                 17
#define GAMEPAD_KEY_VALUE_RX_tag                 18
#define GAMEPAD_KEY_VALUE_RY_tag                 19
#define GAMEPAD_KEY_VALUE_LT_tag                 20
#define GAMEPAD_KEY_VALUE_RT_tag                 21

/* Struct field encoding specification for nanopb */
#define GAMEPAD_KEY_VALUE_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    KEY_CHA,           1) \
X(a, STATIC,   SINGULAR, UENUM,    KEY_LEFT,          2) \
X(a, STATIC,   SINGULAR, UENUM,    KEY_RIGHT,         3) \
X(a, STATIC,   SINGULAR, UENUM,    KEY_UP_,           4) \
X(a, STATIC,   SINGULAR, UENUM,    KEY_DOWN_,         5) \
X(a, STATIC,   SINGULAR, UENUM,    KEY_A,             6) \
X(a, STATIC,   SINGULAR, UENUM,    KEY_B,             7) \
X(a, STATIC,   SINGULAR, UENUM,    KEY_X,             8) \
X(a, STATIC,   SINGULAR, UENUM,    KEY_Y,             9) \
X(a, STATIC,   SINGULAR, UENUM,    KEY_LB,           10) \
X(a, STATIC,   SINGULAR, UENUM,    KEY_RB,           11) \
X(a, STATIC,   SINGULAR, UENUM,    KEY_SELECT,       12) \
X(a, STATIC,   SINGULAR, UENUM,    KEY_START,        13) \
X(a, STATIC,   SINGULAR, UENUM,    KEY_R_KEY,        14) \
X(a, STATIC,   SINGULAR, UENUM,    KEY_L_KEY,        15) \
X(a, STATIC,   SINGULAR, INT64,    LX,               16) \
X(a, STATIC,   SINGULAR, INT64,    LY,               17) \
X(a, STATIC,   SINGULAR, INT64,    RX,               18) \
X(a, STATIC,   SINGULAR, INT64,    RY,               19) \
X(a, STATIC,   SINGULAR, INT64,    LT,               20) \
X(a, STATIC,   SINGULAR, INT64,    RT,               21)
#define GAMEPAD_KEY_VALUE_CALLBACK NULL
#define GAMEPAD_KEY_VALUE_DEFAULT NULL

extern const pb_msgdesc_t GAMEPAD_KEY_VALUE_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define GAMEPAD_KEY_VALUE_fields &GAMEPAD_KEY_VALUE_msg

/* Maximum encoded size of messages (where known) */
#define GAMEPAD_KEY_VALUE_size                   102

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
